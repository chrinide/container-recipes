Bootstrap: docker
From: centos:8.3.2011

%help
    Test container pre-installed with various common math/communication
    libraries for electronic structure theory.  The following libraries
    are installed in the ${PACKAGES_BASE} directory:
    * MPICH
    * OpenBLAS
    * NetLib ScaLAPACK
    * FFTW3
    * HDF5

%labels
    MAINTAINER William Huhn (will@huhn.tech)
    VERSION ???

%environment
    export PACKAGES_BASE=/my_packages

%post
    # Install needed packages
    yum update -y
    yum install -y \
        cmake \
        gcc \
        gcc-c++ \
        gcc-gfortran \
        git \
        make \
        perl \
        vim \
        wget
    yum clean all

    PACKAGES_BASE=/my_packages
    mkdir -p $PACKAGES_BASE

    # Download and install Open MPI from source
    MPI_VERSION=3.2.1
    MPI_BASE=${PACKAGES_BASE}/mpich
    cd $PACKAGES_BASE
    wget http://www.mpich.org/static/downloads/${MPI_VERSION}/mpich-${MPI_VERSION}.tar.gz
    tar xf mpich-${MPI_VERSION}.tar.gz && cd mpich-${MPI_VERSION}
    rm -rf build && mkdir build && cd build
    ../configure CC=gcc CXX=g++ FC=gfortran --prefix=${MPI_BASE} --disable-wrapper-rpath
    make -j && make install
    cd $PACKAGES_BASE
    rm -rf ./mpich-${MPI_VERSION}.tar.gz ./mpich-${MPI_VERSION}/

    export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${MPI_BASE}/lib
    export PATH=${PATH}:${MPI_BASE}/bin

    # Download and install OpenBLAS from source
    OPENBLAS_VERSION=0.3.13
    OPENBLAS_BASE=${PACKAGES_BASE}/openblas
    cd $PACKAGES_BASE
    wget http://github.com/xianyi/OpenBLAS/archive/v${OPENBLAS_VERSION}.tar.gz
    tar -zxf v${OPENBLAS_VERSION}.tar.gz && cd OpenBLAS-${OPENBLAS_VERSION}/
    rm -rf build && mkdir build && cd build
    cmake -DBUILD_SHARED_LIBS=true -DCMAKE_INSTALL_PREFIX=${OPENBLAS_BASE} ..
    make -j && make install
    cd $PACKAGES_BASE
    rm -rf ./v${OPENBLAS_VERSION}.tar.gz ./OpenBLAS-${OPENBLAS_VERSION}/

    export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${OPENBLAS_BASE}/lib64

    # Download and install NetLib ScaLAPACK from source
    SCALAPACK_VERSION=2.1.0
    cd $PACKAGES_BASE
    wget http://www.netlib.org/scalapack/scalapack-${SCALAPACK_VERSION}.tgz
    tar -zxf scalapack-${SCALAPACK_VERSION}.tgz && cd scalapack-${SCALAPACK_VERSION}
    rm -rf build && mkdir build && cd build
    cmake -DBUILD_SHARED_LIBS=true -DCMAKE_INSTALL_PREFIX=${PACKAGES_BASE}/scalapack ..
    make -j && make install
    cd $PACKAGES_BASE
    rm -rf ./scalapack-${SCALAPACK_VERSION}.tgz ./scalapack-${SCALAPACK_VERSION}

    # Download and install FFTW3 from source
    FFTW_VERSION=3.3.5
    cd $PACKAGES_BASE
    wget ftp://ftp.fftw.org/pub/fftw/fftw-${FFTW_VERSION}.tar.gz
    tar -zxf fftw-${FFTW_VERSION}.tar.gz && cd fftw-${FFTW_VERSION}
    ./configure F77=gfortran F90=gfortran --prefix=${PACKAGES_BASE}/fftw3 --enable-openmp --enable-shared 
    make -j && make install
    cd $PACKAGES_BASE
    rm -rf ./fftw-${FFTW_VERSION}.tar.gz ./fftw-${FFTW_VERSION}/

    # Download and install HDF5 from source
    HDF5_MAJOR_MINOR_VERSION=1.10
    HDF5_PATCH_VERSION=5
    HDF5_VERSION=${HDF5_MAJOR_MINOR_VERSION}.${HDF5_PATCH_VERSION}
    cd $PACKAGES_BASE
    wget https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-${HDF5_MAJOR_MINOR_VERSION}/hdf5-${HDF5_VERSION}/src/hdf5-${HDF5_VERSION}.tar.gz
    tar -zxf hdf5-${HDF5_VERSION}.tar.gz && cd hdf5-${HDF5_VERSION}
    rm -rf build && mkdir build && cd build
    ../configure --enable-fortran --enable-parallel --enable-shared --enable-fortran2003 --prefix=${PACKAGES_BASE}/hdf5
    make -j && make install
    cd $PACKAGES_BASE
    rm -rf ./hdf5-${HDF5_VERSION}.tar.gz ./hdf5-${HDF5_VERSION}/
